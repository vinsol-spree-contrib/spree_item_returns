c
controller.instance_variable_get(:@return_authorization).user_initiated?
controller.instance_variable_get(:@return_authorization)
c
@return_authorization
c
@return_authorization
c
@return_authorization
c
@return_authorization
return_authorization
c
n
c
user_initiated?
c
return_authorization.user_initiated?
return_authorization.valid?
return_authorization
c
self.return_items
self.user_initiated?
self
n
self.user_initiated?
self.user_initiated>
self.return_items
self
c
self.user_initiated?
user_initiated?
c
user_initiated?
self
se,f
c
user_initiated?
return_authorization
self
c
let(:return_item) { build(:return_item) }
return_authorization
return_item.save
return_authorization
return_authoriation
return_item.return_authorization
return_item
c
return_authorization.errors
return_authorization
c
n
ActiveRecord::Base.logger = Logger.new STDOUT
c
n
ActiveRecord::Base.logger = Logger.new STDOUT
c
return_authorization.save
n
c
n
return_authorization.valid?
n
c
user_initiated
c
user_initiated
c
user_initiated
c
user_initiated
c
user_initiated
c
n
mail_message
n
return_authorization.user_initiated?
return_authorization
c
ActionMailer::Base.deliveries
c
user_initiated
c
ActionMailer::Base.deliveries
return_authorization.user_initiated
return_authorization.valid?
return_authorization.valild?
return_authorization
c
user_initiated
c
user_initiated
self.user_inititated
user_inititated
c
user_initiated
c
self.reload
reload!!
reload!
reload
user_initiated
c
return_authorization.valid?
c
return_authorization.errors
return_authorization.valid?
c
return_authorization.errors
return_authorization.valid?
c
user_initiated
c
return_authorization.valid?
return_authorization
c
a.errors
a.error
a.save
a.user_initiated = true
a.return_items
a.valid?
a = FactoryGirl.build(:return_authorization)
c
i = FactoryGirl.create(:return_items)
i = FactoryGirl.create(:return_item)
a.return_items
a.valid?
a = FactoryGirl.create(:return_authorization)
a.errors
a.valid?
a.save
a.user_initiated = true
a = FactoryGirl.build(:return_authorization)
c = Spree::ReturnAuthorization.new
ActionMailer::Base.deliveries
FactoryGirl.create(:return_authorization)
ActionMailer::Base.deliveries
ActionMailer::Base
ActionMailer.deliveries
ActionMailer::Deliveries
c
n
 expect(mail_message).to receive :deliver_later
expect(Spree::ReturnAuthorizationMailer).to receive(:notify_return_initialization_to_admin).with(return_authorization.number).and_return mail_message
mail_message = double "Mail::Message"
return_authorization
c
 Spree::ReturnAuthorizationMailer.notify_return_initialization_to_admin(return_authorization)
 Spree::ReturnAuthorizationMailer.new.notify_return_initialization_to_admin(return_authorization)
 Spree::ReturnAuthorizationMailer.notify_return_initialization_to_admin(return_authorization)
ReturnAuthorizationMailer.notify_return_initialization_to_admin
 Spree::ReturnAuthorizationMailer.notify_return_initialization_to_admin
 Spree::ReturnAuthorizationMailer.notify_return_initialization_to_admin(return_authorization.number)
return_authorization
mail_message
n
c
return_authorization
c
return_authorization
c
return_authorization.errors
return_authorization.save
Spree::ReturnAuthorization.find_by(number: return_authorization.number)
return_authorization.number
return_authorization
c
order.shipment_state
order
c
order.valid?
order.shipment_state = 'shipped'
c
order.shipment_state
order.shipment_state = 'asdsa'
order
order.shipment_state
c
order.shipment_state
c
order.shipment_state
order.shipments.count
order.shipments
order
c
clear
 let(:shorder) { create(:shipped_order) }
order.shipment_state
return_authorization.order.id
return_authorization.order
return_authorization.order.ids
user.orders.ids
c
expect(ability).to be_able_to :display, return_authorization
user.orders << order
order.return_authorizations << return_authorization
order.return_authorizations
return_authorization
order
c
Spree::ReturnAuthorization.attribute_names
Spree::ReturnAuthorization.attribute
Spree::ReturnAuthorization.attribute_names
Spree::ReturnAuthorization.attributes
Spree::ReturnAuthorization.attribute_name
Spree::ReturnAuthorization.attributes_name
Spree::ReturnAuthorization.column_names
Spree::ReturnAuthorization.attributes
Spree::ReturnAuthorization.name_attributes
return_authorization.class.name_attributes
stock_location
return_authorization
order
c
return_authorization.errors
order.errors
order.return_authorizations << return_authorization
order.return_authorizations
return_authorization
order
c
user.orders
return_authorization.order.id
user.orders
user.orders.ids
return_authorization.order.id
return_authorization.order
.order
return_authorization
order
4order
user.orders
user.orders << order
order
orders.ids
user.orders.ids
c
user.orders.first.return_authorizations
user.orders.first
user.orders
c
resource_return_authorization.errors
resource_return_authorization.save
resource_return_authorization
resource_shipped_order.errors
resource_shipped_order.errros
user.errors
user.orders << resource_shipped_order
user.errors
user.orders.count
user.orders.first.id
user.orders.ids
user.orders
